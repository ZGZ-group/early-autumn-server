<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.base.dao.RoleMapper">

    <resultMap id="BaseResultMap" type="com.base.domain.Role">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="role_id" property="roleId" jdbcType="VARCHAR"/>
        <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
        <result column="is_deleted" property="isDeleted" jdbcType="BOOLEAN"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
      id,
      role_id,
      role_name,
      is_deleted,
      create_time
    </sql>

    <sql id="Base_Table">
        t_role
    </sql>

    <select id="queryRoleListByUrls" resultType="string">
        select
          role_id
        from
          t_role_resource
        where
          is_deleted = 0
        and
          <foreach collection="urls" item="item" separator="," open="(" close=")">
              #{item,jdbcType=VARCHAR}
          </foreach>
    </select>

    <select id="queryRoleIdsByUsername" resultType="string">
        select
          role_id
        from
          t_account_role
        where
          username = #{username,jdbcType=VARCHAR}
        and
          is_deleted = 0
    </select>

    <select id="queryRoleListByUserName" resultMap="BaseResultMap">
        select
          <include refid="Base_Column_List"/>
        from
          <include refid="Base_Table"/>
        where
          role_id
        in
        (
            select
              role_id
            from
              t_account_role
            where
              username = #{username,jdbcType=VARCHAR}
        )
        and
          is_deleted = 0
    </select>

</mapper>